Terminais sem uso na gramática

    FACTORIAL
    TERNARY
    HASH
    PIPE
    AMPERSAND
    MAP
    VOID
    IMPORT
    STATIC
    COMMENT
    SWITCH
    CASE
    BREAK
    CONTINUE
    DO
    WHILE
    TRY
    CATCH
    FINALLY
    THROW


Estado 79 conflitos: 14 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: PROGRAM ID '{' stmts '}'

    2 stmts: stmt
    3      | stmt stmts

    4 type: PRIMITIVE
    5     | ARRAY LESS_THAN PRIMITIVE MORE_THAN

    6 func_def: SUBPROGRAM ID '(' params ')' ':' type block

    7 params: param
    8       | param ',' params

    9 param: type ID

   10 block: '{' stmts '}'

   11 expression: ID
   12           | literal
   13           | func_call
   14           | binary_expr
   15           | access

   16 access: ID '[' expression ']'

   17 literal: INTEGER
   18        | DOUBLE
   19        | CARACTERE
   20        | STRING

   21 func_call: ID '(' args ')'

   22 args: expressions

   23 expressions: expression
   24            | expression ',' expressions

   25 binary_expr: expression binary_operator expression

   26 binary_operator: boolean_operator
   27                | PLUS
   28                | MINUS
   29                | POWER
   30                | TIMES
   31                | SPLIT
   32                | MOD

   33 boolean_operator: COMPARISON
   34                 | DIFFERENT
   35                 | LESS_THAN
   36                 | MORE_THAN
   37                 | LESS_THAN_EQUALS
   38                 | MORE_THAN_EQUALS
   39                 | AND
   40                 | OR

   41 stmt: ';'
   42     | func_def
   43     | expression ';'
   44     | if_stmt
   45     | for_stmt
   46     | return_stmt ';'
   47     | atrib ';'
   48     | declaration ';'

   49 declaration: type atrib
   50            | type ID

   51 atrib: ID '=' expression
   52      | ID INCREMENT
   53      | ID DECREMENT

   54 if_stmt: IF '(' expression ')' block
   55        | IF '(' expression ')' block ELSE block

   56 for_stmt: FOR '(' for_part ';' expression ';' for_part ')' block

   57 for_part: atrib
   58         | declaration

   59 return_stmt: RETURN expression


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '(' (40) 6 21 54 55 56
    ')' (41) 6 21 54 55 56
    ',' (44) 8 24
    ':' (58) 6
    ';' (59) 41 43 46 47 48 56
    '=' (61) 51
    '[' (91) 16
    ']' (93) 16
    '{' (123) 1 10
    '}' (125) 1 10
    error (256)
    ID <sValue> (258) 1 6 9 11 16 21 50 51 52 53
    PRIMITIVE <sValue> (259) 4 5
    ARRAY <sValue> (260) 5
    INTEGER <iValue> (261) 17
    CARACTERE <cValue> (262) 19
    DOUBLE <fValue> (263) 18
    STRING <sValue> (264) 20
    PROGRAM (265) 1
    SUBPROGRAM (266) 6
    COMPARISON (267) 33
    DIFFERENT (268) 34
    LESS_THAN (269) 5 35
    MORE_THAN (270) 5 36
    LESS_THAN_EQUALS (271) 37
    MORE_THAN_EQUALS (272) 38
    PLUS (273) 27
    MINUS (274) 28
    POWER (275) 29
    TIMES (276) 30
    SPLIT (277) 31
    MOD (278) 32
    INCREMENT (279) 52
    DECREMENT (280) 53
    FACTORIAL (281)
    TERNARY (282)
    HASH (283)
    AND (284) 39
    OR (285) 40
    PIPE (286)
    AMPERSAND (287)
    MAP (288)
    VOID (289)
    IMPORT (290)
    STATIC (291)
    COMMENT (292)
    IF (293) 54 55
    ELSE (294) 55
    FOR (295) 56
    RETURN (296) 59
    SWITCH (297)
    CASE (298)
    BREAK (299)
    CONTINUE (300)
    DO (301)
    WHILE (302)
    TRY (303)
    CATCH (304)
    FINALLY (305)
    THROW (306)


Não terminais com as regras onde eles aparecem

    $accept (62)
        à esquerda: 0
    program (63)
        à esquerda: 1
        à direita: 0
    stmts (64)
        à esquerda: 2 3
        à direita: 1 3 10
    type (65)
        à esquerda: 4 5
        à direita: 6 9 49 50
    func_def (66)
        à esquerda: 6
        à direita: 42
    params (67)
        à esquerda: 7 8
        à direita: 6 8
    param (68)
        à esquerda: 9
        à direita: 7 8
    block (69)
        à esquerda: 10
        à direita: 6 54 55 56
    expression (70)
        à esquerda: 11 12 13 14 15
        à direita: 16 23 24 25 43 51 54 55 56 59
    access (71)
        à esquerda: 16
        à direita: 15
    literal (72)
        à esquerda: 17 18 19 20
        à direita: 12
    func_call (73)
        à esquerda: 21
        à direita: 13
    args (74)
        à esquerda: 22
        à direita: 21
    expressions (75)
        à esquerda: 23 24
        à direita: 22 24
    binary_expr (76)
        à esquerda: 25
        à direita: 14
    binary_operator (77)
        à esquerda: 26 27 28 29 30 31 32
        à direita: 25
    boolean_operator (78)
        à esquerda: 33 34 35 36 37 38 39 40
        à direita: 26
    stmt (79)
        à esquerda: 41 42 43 44 45 46 47 48
        à direita: 2 3
    declaration (80)
        à esquerda: 49 50
        à direita: 48 58
    atrib (81)
        à esquerda: 51 52 53
        à direita: 47 49 57
    if_stmt (82)
        à esquerda: 54 55
        à direita: 44
    for_stmt (83)
        à esquerda: 56
        à direita: 45
    for_part (84)
        à esquerda: 57 58
        à direita: 56
    return_stmt (85)
        à esquerda: 59
        à direita: 46


Estado 0

    0 $accept: • program $end

    PROGRAM  deslocar, e ir ao estado 1

    program  ir ao estado 2


Estado 1

    1 program: PROGRAM • ID '{' stmts '}'

    ID  deslocar, e ir ao estado 3


Estado 2

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 4


Estado 3

    1 program: PROGRAM ID • '{' stmts '}'

    '{'  deslocar, e ir ao estado 5


Estado 4

    0 $accept: program $end •

    $padrão  aceitar


Estado 5

    1 program: PROGRAM ID '{' • stmts '}'

    ID          deslocar, e ir ao estado 6
    PRIMITIVE   deslocar, e ir ao estado 7
    ARRAY       deslocar, e ir ao estado 8
    INTEGER     deslocar, e ir ao estado 9
    CARACTERE   deslocar, e ir ao estado 10
    DOUBLE      deslocar, e ir ao estado 11
    STRING      deslocar, e ir ao estado 12
    SUBPROGRAM  deslocar, e ir ao estado 13
    IF          deslocar, e ir ao estado 14
    FOR         deslocar, e ir ao estado 15
    RETURN      deslocar, e ir ao estado 16
    ';'         deslocar, e ir ao estado 17

    stmts        ir ao estado 18
    type         ir ao estado 19
    func_def     ir ao estado 20
    expression   ir ao estado 21
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25
    stmt         ir ao estado 26
    declaration  ir ao estado 27
    atrib        ir ao estado 28
    if_stmt      ir ao estado 29
    for_stmt     ir ao estado 30
    return_stmt  ir ao estado 31


Estado 6

   11 expression: ID •
   16 access: ID • '[' expression ']'
   21 func_call: ID • '(' args ')'
   51 atrib: ID • '=' expression
   52      | ID • INCREMENT
   53      | ID • DECREMENT

    INCREMENT  deslocar, e ir ao estado 32
    DECREMENT  deslocar, e ir ao estado 33
    '('        deslocar, e ir ao estado 34
    '['        deslocar, e ir ao estado 35
    '='        deslocar, e ir ao estado 36

    $padrão  reduzir usando a regra 11 (expression)


Estado 7

    4 type: PRIMITIVE •

    $padrão  reduzir usando a regra 4 (type)


Estado 8

    5 type: ARRAY • LESS_THAN PRIMITIVE MORE_THAN

    LESS_THAN  deslocar, e ir ao estado 37


Estado 9

   17 literal: INTEGER •

    $padrão  reduzir usando a regra 17 (literal)


Estado 10

   19 literal: CARACTERE •

    $padrão  reduzir usando a regra 19 (literal)


Estado 11

   18 literal: DOUBLE •

    $padrão  reduzir usando a regra 18 (literal)


Estado 12

   20 literal: STRING •

    $padrão  reduzir usando a regra 20 (literal)


Estado 13

    6 func_def: SUBPROGRAM • ID '(' params ')' ':' type block

    ID  deslocar, e ir ao estado 38


Estado 14

   54 if_stmt: IF • '(' expression ')' block
   55        | IF • '(' expression ')' block ELSE block

    '('  deslocar, e ir ao estado 39


Estado 15

   56 for_stmt: FOR • '(' for_part ';' expression ';' for_part ')' block

    '('  deslocar, e ir ao estado 40


Estado 16

   59 return_stmt: RETURN • expression

    ID         deslocar, e ir ao estado 41
    INTEGER    deslocar, e ir ao estado 9
    CARACTERE  deslocar, e ir ao estado 10
    DOUBLE     deslocar, e ir ao estado 11
    STRING     deslocar, e ir ao estado 12

    expression   ir ao estado 42
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25


Estado 17

   41 stmt: ';' •

    $padrão  reduzir usando a regra 41 (stmt)


Estado 18

    1 program: PROGRAM ID '{' stmts • '}'

    '}'  deslocar, e ir ao estado 43


Estado 19

   49 declaration: type • atrib
   50            | type • ID

    ID  deslocar, e ir ao estado 44

    atrib  ir ao estado 45


Estado 20

   42 stmt: func_def •

    $padrão  reduzir usando a regra 42 (stmt)


Estado 21

   25 binary_expr: expression • binary_operator expression
   43 stmt: expression • ';'

    COMPARISON        deslocar, e ir ao estado 46
    DIFFERENT         deslocar, e ir ao estado 47
    LESS_THAN         deslocar, e ir ao estado 48
    MORE_THAN         deslocar, e ir ao estado 49
    LESS_THAN_EQUALS  deslocar, e ir ao estado 50
    MORE_THAN_EQUALS  deslocar, e ir ao estado 51
    PLUS              deslocar, e ir ao estado 52
    MINUS             deslocar, e ir ao estado 53
    POWER             deslocar, e ir ao estado 54
    TIMES             deslocar, e ir ao estado 55
    SPLIT             deslocar, e ir ao estado 56
    MOD               deslocar, e ir ao estado 57
    AND               deslocar, e ir ao estado 58
    OR                deslocar, e ir ao estado 59
    ';'               deslocar, e ir ao estado 60

    binary_operator   ir ao estado 61
    boolean_operator  ir ao estado 62


Estado 22

   15 expression: access •

    $padrão  reduzir usando a regra 15 (expression)


Estado 23

   12 expression: literal •

    $padrão  reduzir usando a regra 12 (expression)


Estado 24

   13 expression: func_call •

    $padrão  reduzir usando a regra 13 (expression)


Estado 25

   14 expression: binary_expr •

    $padrão  reduzir usando a regra 14 (expression)


Estado 26

    2 stmts: stmt •
    3      | stmt • stmts

    ID          deslocar, e ir ao estado 6
    PRIMITIVE   deslocar, e ir ao estado 7
    ARRAY       deslocar, e ir ao estado 8
    INTEGER     deslocar, e ir ao estado 9
    CARACTERE   deslocar, e ir ao estado 10
    DOUBLE      deslocar, e ir ao estado 11
    STRING      deslocar, e ir ao estado 12
    SUBPROGRAM  deslocar, e ir ao estado 13
    IF          deslocar, e ir ao estado 14
    FOR         deslocar, e ir ao estado 15
    RETURN      deslocar, e ir ao estado 16
    ';'         deslocar, e ir ao estado 17

    $padrão  reduzir usando a regra 2 (stmts)

    stmts        ir ao estado 63
    type         ir ao estado 19
    func_def     ir ao estado 20
    expression   ir ao estado 21
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25
    stmt         ir ao estado 26
    declaration  ir ao estado 27
    atrib        ir ao estado 28
    if_stmt      ir ao estado 29
    for_stmt     ir ao estado 30
    return_stmt  ir ao estado 31


Estado 27

   48 stmt: declaration • ';'

    ';'  deslocar, e ir ao estado 64


Estado 28

   47 stmt: atrib • ';'

    ';'  deslocar, e ir ao estado 65


Estado 29

   44 stmt: if_stmt •

    $padrão  reduzir usando a regra 44 (stmt)


Estado 30

   45 stmt: for_stmt •

    $padrão  reduzir usando a regra 45 (stmt)


Estado 31

   46 stmt: return_stmt • ';'

    ';'  deslocar, e ir ao estado 66


Estado 32

   52 atrib: ID INCREMENT •

    $padrão  reduzir usando a regra 52 (atrib)


Estado 33

   53 atrib: ID DECREMENT •

    $padrão  reduzir usando a regra 53 (atrib)


Estado 34

   21 func_call: ID '(' • args ')'

    ID         deslocar, e ir ao estado 41
    INTEGER    deslocar, e ir ao estado 9
    CARACTERE  deslocar, e ir ao estado 10
    DOUBLE     deslocar, e ir ao estado 11
    STRING     deslocar, e ir ao estado 12

    expression   ir ao estado 67
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    args         ir ao estado 68
    expressions  ir ao estado 69
    binary_expr  ir ao estado 25


Estado 35

   16 access: ID '[' • expression ']'

    ID         deslocar, e ir ao estado 41
    INTEGER    deslocar, e ir ao estado 9
    CARACTERE  deslocar, e ir ao estado 10
    DOUBLE     deslocar, e ir ao estado 11
    STRING     deslocar, e ir ao estado 12

    expression   ir ao estado 70
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25


Estado 36

   51 atrib: ID '=' • expression

    ID         deslocar, e ir ao estado 41
    INTEGER    deslocar, e ir ao estado 9
    CARACTERE  deslocar, e ir ao estado 10
    DOUBLE     deslocar, e ir ao estado 11
    STRING     deslocar, e ir ao estado 12

    expression   ir ao estado 71
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25


Estado 37

    5 type: ARRAY LESS_THAN • PRIMITIVE MORE_THAN

    PRIMITIVE  deslocar, e ir ao estado 72


Estado 38

    6 func_def: SUBPROGRAM ID • '(' params ')' ':' type block

    '('  deslocar, e ir ao estado 73


Estado 39

   54 if_stmt: IF '(' • expression ')' block
   55        | IF '(' • expression ')' block ELSE block

    ID         deslocar, e ir ao estado 41
    INTEGER    deslocar, e ir ao estado 9
    CARACTERE  deslocar, e ir ao estado 10
    DOUBLE     deslocar, e ir ao estado 11
    STRING     deslocar, e ir ao estado 12

    expression   ir ao estado 74
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25


Estado 40

   56 for_stmt: FOR '(' • for_part ';' expression ';' for_part ')' block

    ID         deslocar, e ir ao estado 75
    PRIMITIVE  deslocar, e ir ao estado 7
    ARRAY      deslocar, e ir ao estado 8

    type         ir ao estado 19
    declaration  ir ao estado 76
    atrib        ir ao estado 77
    for_part     ir ao estado 78


Estado 41

   11 expression: ID •
   16 access: ID • '[' expression ']'
   21 func_call: ID • '(' args ')'

    '('  deslocar, e ir ao estado 34
    '['  deslocar, e ir ao estado 35

    $padrão  reduzir usando a regra 11 (expression)


Estado 42

   25 binary_expr: expression • binary_operator expression
   59 return_stmt: RETURN expression •

    COMPARISON        deslocar, e ir ao estado 46
    DIFFERENT         deslocar, e ir ao estado 47
    LESS_THAN         deslocar, e ir ao estado 48
    MORE_THAN         deslocar, e ir ao estado 49
    LESS_THAN_EQUALS  deslocar, e ir ao estado 50
    MORE_THAN_EQUALS  deslocar, e ir ao estado 51
    PLUS              deslocar, e ir ao estado 52
    MINUS             deslocar, e ir ao estado 53
    POWER             deslocar, e ir ao estado 54
    TIMES             deslocar, e ir ao estado 55
    SPLIT             deslocar, e ir ao estado 56
    MOD               deslocar, e ir ao estado 57
    AND               deslocar, e ir ao estado 58
    OR                deslocar, e ir ao estado 59

    $padrão  reduzir usando a regra 59 (return_stmt)

    binary_operator   ir ao estado 61
    boolean_operator  ir ao estado 62


Estado 43

    1 program: PROGRAM ID '{' stmts '}' •

    $padrão  reduzir usando a regra 1 (program)


Estado 44

   50 declaration: type ID •
   51 atrib: ID • '=' expression
   52      | ID • INCREMENT
   53      | ID • DECREMENT

    INCREMENT  deslocar, e ir ao estado 32
    DECREMENT  deslocar, e ir ao estado 33
    '='        deslocar, e ir ao estado 36

    $padrão  reduzir usando a regra 50 (declaration)


Estado 45

   49 declaration: type atrib •

    $padrão  reduzir usando a regra 49 (declaration)


Estado 46

   33 boolean_operator: COMPARISON •

    $padrão  reduzir usando a regra 33 (boolean_operator)


Estado 47

   34 boolean_operator: DIFFERENT •

    $padrão  reduzir usando a regra 34 (boolean_operator)


Estado 48

   35 boolean_operator: LESS_THAN •

    $padrão  reduzir usando a regra 35 (boolean_operator)


Estado 49

   36 boolean_operator: MORE_THAN •

    $padrão  reduzir usando a regra 36 (boolean_operator)


Estado 50

   37 boolean_operator: LESS_THAN_EQUALS •

    $padrão  reduzir usando a regra 37 (boolean_operator)


Estado 51

   38 boolean_operator: MORE_THAN_EQUALS •

    $padrão  reduzir usando a regra 38 (boolean_operator)


Estado 52

   27 binary_operator: PLUS •

    $padrão  reduzir usando a regra 27 (binary_operator)


Estado 53

   28 binary_operator: MINUS •

    $padrão  reduzir usando a regra 28 (binary_operator)


Estado 54

   29 binary_operator: POWER •

    $padrão  reduzir usando a regra 29 (binary_operator)


Estado 55

   30 binary_operator: TIMES •

    $padrão  reduzir usando a regra 30 (binary_operator)


Estado 56

   31 binary_operator: SPLIT •

    $padrão  reduzir usando a regra 31 (binary_operator)


Estado 57

   32 binary_operator: MOD •

    $padrão  reduzir usando a regra 32 (binary_operator)


Estado 58

   39 boolean_operator: AND •

    $padrão  reduzir usando a regra 39 (boolean_operator)


Estado 59

   40 boolean_operator: OR •

    $padrão  reduzir usando a regra 40 (boolean_operator)


Estado 60

   43 stmt: expression ';' •

    $padrão  reduzir usando a regra 43 (stmt)


Estado 61

   25 binary_expr: expression binary_operator • expression

    ID         deslocar, e ir ao estado 41
    INTEGER    deslocar, e ir ao estado 9
    CARACTERE  deslocar, e ir ao estado 10
    DOUBLE     deslocar, e ir ao estado 11
    STRING     deslocar, e ir ao estado 12

    expression   ir ao estado 79
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25


Estado 62

   26 binary_operator: boolean_operator •

    $padrão  reduzir usando a regra 26 (binary_operator)


Estado 63

    3 stmts: stmt stmts •

    $padrão  reduzir usando a regra 3 (stmts)


Estado 64

   48 stmt: declaration ';' •

    $padrão  reduzir usando a regra 48 (stmt)


Estado 65

   47 stmt: atrib ';' •

    $padrão  reduzir usando a regra 47 (stmt)


Estado 66

   46 stmt: return_stmt ';' •

    $padrão  reduzir usando a regra 46 (stmt)


Estado 67

   23 expressions: expression •
   24            | expression • ',' expressions
   25 binary_expr: expression • binary_operator expression

    COMPARISON        deslocar, e ir ao estado 46
    DIFFERENT         deslocar, e ir ao estado 47
    LESS_THAN         deslocar, e ir ao estado 48
    MORE_THAN         deslocar, e ir ao estado 49
    LESS_THAN_EQUALS  deslocar, e ir ao estado 50
    MORE_THAN_EQUALS  deslocar, e ir ao estado 51
    PLUS              deslocar, e ir ao estado 52
    MINUS             deslocar, e ir ao estado 53
    POWER             deslocar, e ir ao estado 54
    TIMES             deslocar, e ir ao estado 55
    SPLIT             deslocar, e ir ao estado 56
    MOD               deslocar, e ir ao estado 57
    AND               deslocar, e ir ao estado 58
    OR                deslocar, e ir ao estado 59
    ','               deslocar, e ir ao estado 80

    $padrão  reduzir usando a regra 23 (expressions)

    binary_operator   ir ao estado 61
    boolean_operator  ir ao estado 62


Estado 68

   21 func_call: ID '(' args • ')'

    ')'  deslocar, e ir ao estado 81


Estado 69

   22 args: expressions •

    $padrão  reduzir usando a regra 22 (args)


Estado 70

   16 access: ID '[' expression • ']'
   25 binary_expr: expression • binary_operator expression

    COMPARISON        deslocar, e ir ao estado 46
    DIFFERENT         deslocar, e ir ao estado 47
    LESS_THAN         deslocar, e ir ao estado 48
    MORE_THAN         deslocar, e ir ao estado 49
    LESS_THAN_EQUALS  deslocar, e ir ao estado 50
    MORE_THAN_EQUALS  deslocar, e ir ao estado 51
    PLUS              deslocar, e ir ao estado 52
    MINUS             deslocar, e ir ao estado 53
    POWER             deslocar, e ir ao estado 54
    TIMES             deslocar, e ir ao estado 55
    SPLIT             deslocar, e ir ao estado 56
    MOD               deslocar, e ir ao estado 57
    AND               deslocar, e ir ao estado 58
    OR                deslocar, e ir ao estado 59
    ']'               deslocar, e ir ao estado 82

    binary_operator   ir ao estado 61
    boolean_operator  ir ao estado 62


Estado 71

   25 binary_expr: expression • binary_operator expression
   51 atrib: ID '=' expression •

    COMPARISON        deslocar, e ir ao estado 46
    DIFFERENT         deslocar, e ir ao estado 47
    LESS_THAN         deslocar, e ir ao estado 48
    MORE_THAN         deslocar, e ir ao estado 49
    LESS_THAN_EQUALS  deslocar, e ir ao estado 50
    MORE_THAN_EQUALS  deslocar, e ir ao estado 51
    PLUS              deslocar, e ir ao estado 52
    MINUS             deslocar, e ir ao estado 53
    POWER             deslocar, e ir ao estado 54
    TIMES             deslocar, e ir ao estado 55
    SPLIT             deslocar, e ir ao estado 56
    MOD               deslocar, e ir ao estado 57
    AND               deslocar, e ir ao estado 58
    OR                deslocar, e ir ao estado 59

    $padrão  reduzir usando a regra 51 (atrib)

    binary_operator   ir ao estado 61
    boolean_operator  ir ao estado 62


Estado 72

    5 type: ARRAY LESS_THAN PRIMITIVE • MORE_THAN

    MORE_THAN  deslocar, e ir ao estado 83


Estado 73

    6 func_def: SUBPROGRAM ID '(' • params ')' ':' type block

    PRIMITIVE  deslocar, e ir ao estado 7
    ARRAY      deslocar, e ir ao estado 8

    type    ir ao estado 84
    params  ir ao estado 85
    param   ir ao estado 86


Estado 74

   25 binary_expr: expression • binary_operator expression
   54 if_stmt: IF '(' expression • ')' block
   55        | IF '(' expression • ')' block ELSE block

    COMPARISON        deslocar, e ir ao estado 46
    DIFFERENT         deslocar, e ir ao estado 47
    LESS_THAN         deslocar, e ir ao estado 48
    MORE_THAN         deslocar, e ir ao estado 49
    LESS_THAN_EQUALS  deslocar, e ir ao estado 50
    MORE_THAN_EQUALS  deslocar, e ir ao estado 51
    PLUS              deslocar, e ir ao estado 52
    MINUS             deslocar, e ir ao estado 53
    POWER             deslocar, e ir ao estado 54
    TIMES             deslocar, e ir ao estado 55
    SPLIT             deslocar, e ir ao estado 56
    MOD               deslocar, e ir ao estado 57
    AND               deslocar, e ir ao estado 58
    OR                deslocar, e ir ao estado 59
    ')'               deslocar, e ir ao estado 87

    binary_operator   ir ao estado 61
    boolean_operator  ir ao estado 62


Estado 75

   51 atrib: ID • '=' expression
   52      | ID • INCREMENT
   53      | ID • DECREMENT

    INCREMENT  deslocar, e ir ao estado 32
    DECREMENT  deslocar, e ir ao estado 33
    '='        deslocar, e ir ao estado 36


Estado 76

   58 for_part: declaration •

    $padrão  reduzir usando a regra 58 (for_part)


Estado 77

   57 for_part: atrib •

    $padrão  reduzir usando a regra 57 (for_part)


Estado 78

   56 for_stmt: FOR '(' for_part • ';' expression ';' for_part ')' block

    ';'  deslocar, e ir ao estado 88


Estado 79

   25 binary_expr: expression • binary_operator expression
   25            | expression binary_operator expression •

    COMPARISON        deslocar, e ir ao estado 46
    DIFFERENT         deslocar, e ir ao estado 47
    LESS_THAN         deslocar, e ir ao estado 48
    MORE_THAN         deslocar, e ir ao estado 49
    LESS_THAN_EQUALS  deslocar, e ir ao estado 50
    MORE_THAN_EQUALS  deslocar, e ir ao estado 51
    PLUS              deslocar, e ir ao estado 52
    MINUS             deslocar, e ir ao estado 53
    POWER             deslocar, e ir ao estado 54
    TIMES             deslocar, e ir ao estado 55
    SPLIT             deslocar, e ir ao estado 56
    MOD               deslocar, e ir ao estado 57
    AND               deslocar, e ir ao estado 58
    OR                deslocar, e ir ao estado 59

    COMPARISON        [reduzir usando a regra 25 (binary_expr)]
    DIFFERENT         [reduzir usando a regra 25 (binary_expr)]
    LESS_THAN         [reduzir usando a regra 25 (binary_expr)]
    MORE_THAN         [reduzir usando a regra 25 (binary_expr)]
    LESS_THAN_EQUALS  [reduzir usando a regra 25 (binary_expr)]
    MORE_THAN_EQUALS  [reduzir usando a regra 25 (binary_expr)]
    PLUS              [reduzir usando a regra 25 (binary_expr)]
    MINUS             [reduzir usando a regra 25 (binary_expr)]
    POWER             [reduzir usando a regra 25 (binary_expr)]
    TIMES             [reduzir usando a regra 25 (binary_expr)]
    SPLIT             [reduzir usando a regra 25 (binary_expr)]
    MOD               [reduzir usando a regra 25 (binary_expr)]
    AND               [reduzir usando a regra 25 (binary_expr)]
    OR                [reduzir usando a regra 25 (binary_expr)]
    $padrão           reduzir usando a regra 25 (binary_expr)

    binary_operator   ir ao estado 61
    boolean_operator  ir ao estado 62


Estado 80

   24 expressions: expression ',' • expressions

    ID         deslocar, e ir ao estado 41
    INTEGER    deslocar, e ir ao estado 9
    CARACTERE  deslocar, e ir ao estado 10
    DOUBLE     deslocar, e ir ao estado 11
    STRING     deslocar, e ir ao estado 12

    expression   ir ao estado 67
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    expressions  ir ao estado 89
    binary_expr  ir ao estado 25


Estado 81

   21 func_call: ID '(' args ')' •

    $padrão  reduzir usando a regra 21 (func_call)


Estado 82

   16 access: ID '[' expression ']' •

    $padrão  reduzir usando a regra 16 (access)


Estado 83

    5 type: ARRAY LESS_THAN PRIMITIVE MORE_THAN •

    $padrão  reduzir usando a regra 5 (type)


Estado 84

    9 param: type • ID

    ID  deslocar, e ir ao estado 90


Estado 85

    6 func_def: SUBPROGRAM ID '(' params • ')' ':' type block

    ')'  deslocar, e ir ao estado 91


Estado 86

    7 params: param •
    8       | param • ',' params

    ','  deslocar, e ir ao estado 92

    $padrão  reduzir usando a regra 7 (params)


Estado 87

   54 if_stmt: IF '(' expression ')' • block
   55        | IF '(' expression ')' • block ELSE block

    '{'  deslocar, e ir ao estado 93

    block  ir ao estado 94


Estado 88

   56 for_stmt: FOR '(' for_part ';' • expression ';' for_part ')' block

    ID         deslocar, e ir ao estado 41
    INTEGER    deslocar, e ir ao estado 9
    CARACTERE  deslocar, e ir ao estado 10
    DOUBLE     deslocar, e ir ao estado 11
    STRING     deslocar, e ir ao estado 12

    expression   ir ao estado 95
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25


Estado 89

   24 expressions: expression ',' expressions •

    $padrão  reduzir usando a regra 24 (expressions)


Estado 90

    9 param: type ID •

    $padrão  reduzir usando a regra 9 (param)


Estado 91

    6 func_def: SUBPROGRAM ID '(' params ')' • ':' type block

    ':'  deslocar, e ir ao estado 96


Estado 92

    8 params: param ',' • params

    PRIMITIVE  deslocar, e ir ao estado 7
    ARRAY      deslocar, e ir ao estado 8

    type    ir ao estado 84
    params  ir ao estado 97
    param   ir ao estado 86


Estado 93

   10 block: '{' • stmts '}'

    ID          deslocar, e ir ao estado 6
    PRIMITIVE   deslocar, e ir ao estado 7
    ARRAY       deslocar, e ir ao estado 8
    INTEGER     deslocar, e ir ao estado 9
    CARACTERE   deslocar, e ir ao estado 10
    DOUBLE      deslocar, e ir ao estado 11
    STRING      deslocar, e ir ao estado 12
    SUBPROGRAM  deslocar, e ir ao estado 13
    IF          deslocar, e ir ao estado 14
    FOR         deslocar, e ir ao estado 15
    RETURN      deslocar, e ir ao estado 16
    ';'         deslocar, e ir ao estado 17

    stmts        ir ao estado 98
    type         ir ao estado 19
    func_def     ir ao estado 20
    expression   ir ao estado 21
    access       ir ao estado 22
    literal      ir ao estado 23
    func_call    ir ao estado 24
    binary_expr  ir ao estado 25
    stmt         ir ao estado 26
    declaration  ir ao estado 27
    atrib        ir ao estado 28
    if_stmt      ir ao estado 29
    for_stmt     ir ao estado 30
    return_stmt  ir ao estado 31


Estado 94

   54 if_stmt: IF '(' expression ')' block •
   55        | IF '(' expression ')' block • ELSE block

    ELSE  deslocar, e ir ao estado 99

    $padrão  reduzir usando a regra 54 (if_stmt)


Estado 95

   25 binary_expr: expression • binary_operator expression
   56 for_stmt: FOR '(' for_part ';' expression • ';' for_part ')' block

    COMPARISON        deslocar, e ir ao estado 46
    DIFFERENT         deslocar, e ir ao estado 47
    LESS_THAN         deslocar, e ir ao estado 48
    MORE_THAN         deslocar, e ir ao estado 49
    LESS_THAN_EQUALS  deslocar, e ir ao estado 50
    MORE_THAN_EQUALS  deslocar, e ir ao estado 51
    PLUS              deslocar, e ir ao estado 52
    MINUS             deslocar, e ir ao estado 53
    POWER             deslocar, e ir ao estado 54
    TIMES             deslocar, e ir ao estado 55
    SPLIT             deslocar, e ir ao estado 56
    MOD               deslocar, e ir ao estado 57
    AND               deslocar, e ir ao estado 58
    OR                deslocar, e ir ao estado 59
    ';'               deslocar, e ir ao estado 100

    binary_operator   ir ao estado 61
    boolean_operator  ir ao estado 62


Estado 96

    6 func_def: SUBPROGRAM ID '(' params ')' ':' • type block

    PRIMITIVE  deslocar, e ir ao estado 7
    ARRAY      deslocar, e ir ao estado 8

    type  ir ao estado 101


Estado 97

    8 params: param ',' params •

    $padrão  reduzir usando a regra 8 (params)


Estado 98

   10 block: '{' stmts • '}'

    '}'  deslocar, e ir ao estado 102


Estado 99

   55 if_stmt: IF '(' expression ')' block ELSE • block

    '{'  deslocar, e ir ao estado 93

    block  ir ao estado 103


Estado 100

   56 for_stmt: FOR '(' for_part ';' expression ';' • for_part ')' block

    ID         deslocar, e ir ao estado 75
    PRIMITIVE  deslocar, e ir ao estado 7
    ARRAY      deslocar, e ir ao estado 8

    type         ir ao estado 19
    declaration  ir ao estado 76
    atrib        ir ao estado 77
    for_part     ir ao estado 104


Estado 101

    6 func_def: SUBPROGRAM ID '(' params ')' ':' type • block

    '{'  deslocar, e ir ao estado 93

    block  ir ao estado 105


Estado 102

   10 block: '{' stmts '}' •

    $padrão  reduzir usando a regra 10 (block)


Estado 103

   55 if_stmt: IF '(' expression ')' block ELSE block •

    $padrão  reduzir usando a regra 55 (if_stmt)


Estado 104

   56 for_stmt: FOR '(' for_part ';' expression ';' for_part • ')' block

    ')'  deslocar, e ir ao estado 106


Estado 105

    6 func_def: SUBPROGRAM ID '(' params ')' ':' type block •

    $padrão  reduzir usando a regra 6 (func_def)


Estado 106

   56 for_stmt: FOR '(' for_part ';' expression ';' for_part ')' • block

    '{'  deslocar, e ir ao estado 93

    block  ir ao estado 107


Estado 107

   56 for_stmt: FOR '(' for_part ';' expression ';' for_part ')' block •

    $padrão  reduzir usando a regra 56 (for_stmt)
